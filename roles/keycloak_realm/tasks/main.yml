# Copyright (c) 2023 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Lookup Cluster IP for Keycloak
  when: keycloak_realm_auth_keycloak_url is not defined
  block:
    - name: Get the Keycloak service
      run_once: true
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Service
        name: "{{ keycloak_realm_service_name }}"
        namespace: "{{ keycloak_realm_service_namespace }}"
      register: _keycloak_realm_service

    - name: Set fact with the Keycloak Cluster IP
      ansible.builtin.set_fact:
        keycloak_realm_auth_keycloak_url: "http://{{ _keycloak_realm_service.resources[0].spec.clusterIP }}"

- name: Lookup admin username for Keycloak
  when: keycloak_realm_auth_username is not defined
  block:
    - name: Get the Keycloak ConfigMap
      run_once: true
      kubernetes.core.k8s_info:
        api_version: v1
        kind: ConfigMap
        name: "{{ keycloak_realm_configmap_name }}"
        namespace: "{{ keycloak_realm_configmap_namespace }}"
      register: _keycloak_realm_configmap

    - name: Set fact with the Keycloak admin username
      ansible.builtin.set_fact:
        keycloak_realm_auth_username: "{{ _keycloak_realm_configmap.resources[0].data[keycloak_realm_configmap_key] }}"

- name: Lookup admin password for Keycloak
  when: keycloak_realm_auth_password is not defined
  block:
    - name: Get the Keycloak secret
      run_once: true
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: "{{ keycloak_realm_secret_name }}"
        namespace: "{{ keycloak_realm_secret_namespace }}"
      register: _keycloak_realm_secret

    - name: Set fact with the Keycloak admin password
      ansible.builtin.set_fact:
        keycloak_realm_auth_password: "{{ _keycloak_realm_secret.resources[0].data[keycloak_realm_secret_key] | b64decode }}"

- name: Create realm
  # Note(okozachenko1203): Ignoring changes in this task until the upstream issue
  #                        https://github.com/keycloak/keycloak/issues/20970 is resolved.
  changed_when: false
  community.general.keycloak_realm:
    # Keycloak settings
    auth_client_id: "{{ keycloak_realm_auth_client_id }}"
    auth_keycloak_url: "{{ keycloak_realm_auth_keycloak_url }}"
    auth_realm: "{{ keycloak_realm_auth_realm }}"
    auth_username: "{{ keycloak_realm_auth_username }}"
    auth_password: "{{ keycloak_realm_auth_password }}"
    # Realm settings
    id: "{{ keycloak_realm_id }}"
    realm: "{{ keycloak_realm_name | default(keycloak_realm_id) }}"
    enabled: true

- name: Include client roles in id_token
  changed_when: false
  community.general.keycloak_clientscope:
    # Keycloak settings
    auth_client_id: "{{ keycloak_realm_auth_client_id }}"
    auth_keycloak_url: "{{ keycloak_realm_auth_keycloak_url }}"
    auth_realm: "{{ keycloak_realm_auth_realm }}"
    auth_username: "{{ keycloak_realm_auth_username }}"
    auth_password: "{{ keycloak_realm_auth_password }}"
    # Client scope settings
    name: roles
    realm: "{{ keycloak_realm_id }}"
    protocol_mappers:
      - name: client roles
        protocol: openid-connect
        protocolMapper: oidc-usermodel-client-role-mapper
        config:
          access.token.claim: true
          id.token.claim: true
          claim.name: "resource_access.${client_id}.roles"
          multivalued: true
