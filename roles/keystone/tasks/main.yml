# Copyright (c) 2022 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Build fact with Helm values
  ansible.builtin.set_fact:
    keystone_helm_computed_values: "{{ _keystone_helm_values | combine(keystone_helm_values, recursive=True) }}"

- name: Create Keycloak clients
  ansible.builtin.include_role:
    name: vexxhost.atmosphere.keycloak_client
  loop: "{{ keystone_helm_computed_values.conf.ks_domains | dict2items }}"
  when: item.value.identity.driver == 'keycloak'
  vars:
    keycloak_client_realm: "{{ item.value.keycloak.realm_name }}"
    # TODO(mnaser): Use client and secret ID provided in `ks_domains`? or dynamically generate ks_domains?
    keycloak_client_id: "{{ keystone_keycloak_client_id }}"
    keycloak_client_secret: "{{ keystone_keycloak_client_secret }}"
    keycloak_client_admin_url: "https://{{ openstack_helm_endpoints_keystone_api_host }}"
    keycloak_client_base_url: "https://{{ openstack_helm_endpoints_keystone_api_host }}"
    keycloak_client_redirect_uris:
      - "{{ keystone_keycloak_redirect_uri }}"
      - "https://{{ openstack_helm_endpoints_horizon_api_host }}/auth/logout/"
    keycloak_client_root_url: "https://{{ openstack_helm_endpoints_keystone_api_host }}"
    keycloak_client_web_origins:
      - "https://{{ openstack_helm_endpoints_keystone_api_host }}"
    keycloak_client_standard_flow_enabled: true
    keycloak_client_implicit_flow_enabled: true

- name: Uninstall the legacy HelmRelease
  run_once: true
  block:
    - name: Suspend the existing HelmRelease
      failed_when: false
      kubernetes.core.k8s:
        state: patched
        api_version: helm.toolkit.fluxcd.io/v2beta1
        kind: HelmRelease
        name: "{{ keystone_helm_release_name }}"
        namespace: "{{ keystone_helm_release_namespace }}"
        definition:
          spec:
            suspend: true

    - name: Remove the existing HelmRelease
      failed_when: false
      kubernetes.core.k8s:
        state: absent
        api_version: helm.toolkit.fluxcd.io/v2beta1
        kind: HelmRelease
        name: "{{ keystone_helm_release_name }}"
        namespace: "{{ keystone_helm_release_namespace }}"

- name: Deploy Helm chart
  run_once: true
  kubernetes.core.helm:
    name: "{{ keystone_helm_release_name }}"
    chart_ref: "{{ keystone_helm_chart_ref }}"
    release_namespace: "{{ keystone_helm_release_namespace }}"
    create_namespace: true
    kubeconfig: /etc/kubernetes/admin.conf
    values: "{{ keystone_helm_computed_values }}"

- name: Create Ingress
  ansible.builtin.include_role:
    name: openstack_helm_ingress
  vars:
    openstack_helm_ingress_endpoint: identity
    openstack_helm_ingress_service_name: keystone-api
    openstack_helm_ingress_service_port: 5000
    openstack_helm_ingress_annotations: "{{ keystone_ingress_annotations }}"

- name: Get the ID of the Atmosphere domain
  openstack.cloud.identity_domain_info:
    cloud: atmosphere
    name: atmosphere
  register: _keystone_atmosphere_domain_info
  until: _keystone_atmosphere_domain_info is not failed
  retries: 60
  delay: 5
  tags:
    - keystone-identity-provider

- name: Create identity provider
  openstack.cloud.federation_idp:
    cloud: atmosphere
    name: atmosphere
    description: Atmosphere
    domain_id: "{{ _keystone_atmosphere_domain_info.openstack_domains[0].id }}"
    remote_ids:
      - "https://{{ keycloak_host }}/realms/{{ keycloak_realm_result.proposed.id }}"
  tags:
    - keystone-identity-provider

- name: Create federation mapping
  openstack.cloud.federation_mapping:
    cloud: atmosphere
    name: atmosphere-openid
    rules:
      - local:
          - user:
              type: local
              id: "{0}"
              domain:
                name: atmosphere
        remote:
          - type: OIDC-sub
  tags:
    - keystone-federation-mapping

- name: Create a federation protocol
  openstack.cloud.keystone_federation_protocol:
    cloud: atmosphere
    name: openid
    idp_id: atmosphere
    mapping_id: atmosphere-openid
  tags:
    - keystone-federation-protocol
