- name: Create a secret for Percona XtraDB cluster passwords
  run_once: true
  block:
    - name: Check if the Percona XtraDB cluster secret exists
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: percona-xtradb
        namespace: openstack
      register: _pxc_secret
      ignore_errors: true

    - name: Create a secret
      when: ( _pxc_secret.resources | length==0 )
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          stringData:
            clustercheck: "{{ lookup('password', '/dev/null chars=ascii_lowercase,ascii_uppercase,digits length=32') }}"
            monitor: "{{ lookup('password', '/dev/null chars=ascii_lowercase,ascii_uppercase,digits length=32') }}"
            operator: "{{ lookup('password', '/dev/null chars=ascii_lowercase,ascii_uppercase,digits length=32') }}"
            proxyadmin: "{{ lookup('password', '/dev/null chars=ascii_lowercase,ascii_uppercase,digits length=32') }}"
            replication: "{{ lookup('password', '/dev/null chars=ascii_lowercase,ascii_uppercase,digits length=32') }}"
            root: "{{ lookup('password', '/dev/null chars=ascii_lowercase,ascii_uppercase,digits length=32') }}"
            xtrabackup: "{{ lookup('password', '/dev/null chars=ascii_lowercase,ascii_uppercase,digits length=32') }}"
          kind: Secret
          metadata:
            name: percona-xtradb
            namespace: openstack
          type: Opaque

- name: Create Percona XtraDB cluster
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: pxc.percona.com/v1
      kind: PerconaXtraDBCluster
      metadata:
        name: percona-xtradb
        namespace: openstack
      spec: "{{ _percona_xtradb_cluster_spec | combine(percona_xtradb_cluster_spec, recursive=True) }}"
    wait_sleep: 1
    wait_timeout: 600
    wait: true
    wait_condition:
      type: ready
      status: true

- name: Create Keycloak database and user
  when: atmosphere_keycloak_enabled | default(true)
  block:
    - name: Grab Percona XtraDB cluster secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: percona-xtradb
        namespace: openstack
      register: _pxc_secret

    - name: Cache fact with Percona XtraDB root password
      ansible.builtin.set_fact:
        _pxc_root_password: "{{ _pxc_secret.resources[0]['data']['root'] | b64decode }}"

    - name: Check if the Keycloak database secret exists
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: keycloak-db-credentials
        namespace: openstack
      register: _keycloak_db_secret
      ignore_errors: true

    - name: Create a Keycloak database secret
      when: ( _keycloak_db_secret.resources | length==0 )
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          stringData:
            username: keycloak
            password: "{{ lookup('password', '/dev/null chars=ascii_lowercase,ascii_uppercase,digits length=32') }}"
          kind: Secret
          metadata:
            name: keycloak-db-credentials
            namespace: openstack
          type: Opaque

    - name: Grab Keycloak database secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: keycloak-db-credentials
        namespace: openstack
      register: _keycloak_db_secret

    - name: Cache fact with Keycloak database credentials
      ansible.builtin.set_fact:
        _keycloak_db_password: "{{ _keycloak_db_secret.resources[0]['data']['password'] | b64decode }}"
        _keycloak_db_username: "{{ _keycloak_db_secret.resources[0]['data']['username'] | b64decode }}"

    - name: Create a Keycloak database and a user
      kubernetes.core.k8s_exec:
        namespace: openstack
        pod: percona-xtradb-pxc-0
        container: pxc
        command: |
          mysql -u root -p{{ _pxc_root_password }} -e "CREATE DATABASE IF NOT EXISTS keycloak"
          mysql -u root -p{{ _pxc_root_password }} -e "CREATE USER IF NOT EXISTS '{{ _keycloak_db_username }}'@'%'"
          mysql -u root -p{{ _pxc_root_password }} -e "ALTER USER '{{ _keycloak_db_username }}'@'%' IDENTIFIED BY '{{ _keycloak_db_password }}'"
          mysql -u root -p{{ _pxc_root_password }} -e "GRANT ALL ON keycloak.* TO '{{ _keycloak_db_username }}'@'%'"
