# Copyright (c) 2023 VEXXHOST, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- hosts: localhost
  vars:
    molecule_scenario_name: "{{ lookup('env', 'MOLECULE_SCENARIO_NAME') }}"
    molecule_file: "{{ lookup('env', 'MOLECULE_FILE') }}"
    molecule: "{{ lookup('file', molecule_file) | from_yaml }}"
  tasks:
    - name: Create a temporary file and cluster using the configuration
      block:
        - name: Create a temporary file to store the cluster configuration
          ansible.builtin.tempfile:
            state: file
            suffix: .yaml
          register: cluster_config_file

        - name: Generate the cluster configuration
          ansible.builtin.copy:
            dest: "{{ cluster_config_file.path }}"
            content: |-
              kind: Cluster
              apiVersion: kind.x-k8s.io/v1alpha4
              nodes:
              {% for node in molecule['platforms'] %}
              - role: {{ node.role }}
                image: {{ node.image }}
              {% endfor %}

        - name: Create the cluster
          ansible.builtin.shell: |
            kind create cluster --name {{ molecule_scenario_name }} --config {{ cluster_config_file.path }}
      always:
        - name: Delete the temporary file
          ansible.builtin.file:
            path: "{{ cluster_config_file.path }}"
            state: absent

    - name: Create instance configuration file
      ansible.builtin.copy:
        dest: "{{ molecule_instance_config }}"
        content: |-
          {% for node in molecule['platforms'] %}
          - instance: keycloak-control-plane
            connection: community.docker.docker
          {% endfor %}

- name: Prepare container for Ansible
  hosts: all
  gather_facts: false
  pre_tasks:
    - name: Refresh inventory
      meta: refresh_inventory
  tasks:
    - name: Install Python
      ansible.builtin.raw: apt-get update && apt-get install -y python3-minimal
      changed_when: false
      check_mode: false
